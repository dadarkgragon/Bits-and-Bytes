package com.bitsandbytes.main;

import java.awt.Canvas;
import java.awt.image.BufferedImage;

import javax.swing.JFrame;

import com.bitsandbytes.main.graphics.Render;
import com.bitsandbytes.main.graphics.Screen;

public class Display extends Canvas implements Runnable {
	private static final long serialVersionUID = 1L;

	public static final int WIDTH = 1280;
	public static final int HEIGHT = 720;
	public static final String TITLE = "BitsAndBytes pre v0.0.1";

	private Thread thread;
	private Screen screen;
	private BufferedImage img;
	private boolean running = false;
	private Render render;
	
	public Display() {
		screen = new Screen(WIDTH, HEIGHT);
		img = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
		
	}

	private void start() {
		if (running)
			return;
		running = true;
		thread = new Thread(this);
		thread.start();
	}

	private void stop() {
		if (!running)
			return;
		running = false;
		try {
		thread.join();
		}catch (Exception e) {
			e.printStackTrace();
			System.exit(0);
		}
	}
	
	
	public void run() {
		while (running) {
			tick();
			render();
			
		}
	}
	
	private void tick() {
		
	}
	
	private void render() {
		
	}

	public static void main(String[] args) {
		Display game = new Display();
		JFrame frame = new JFrame();
		frame.add(game);
		frame.pack();
		frame.setTitle(TITLE);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(WIDTH, HEIGHT);
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setVisible(true);
		
		System.out.println("running...");
		
		game.start();
	}

}
